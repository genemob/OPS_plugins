package patmob.plugin.alerts;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import patmob.convert.PNFormat;
import patmob.data.PatentCollectionMap;
import patmob.data.PatentDocument;

/**
 *
 * @author Piotr
 */
public class OpsAlertsFrame2 extends javax.swing.JFrame {
    OpsAlertsPlugin2 opsAlertsPlugin;

    /**
     * Creates new form OpsAlertsFrame
     */
    public OpsAlertsFrame2(OpsAlertsPlugin2 oap, String pd, String cc, String folder) {
        initComponents();
        opsAlertsPlugin = oap;
        pdField.setText(pd);
        ccField.setText(cc);
        folderField.setText(folder);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        runAlertsButton = new javax.swing.JButton();
        folderButton = new javax.swing.JButton();
        loadPnsButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pdField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ccField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        folderField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OPS Equivalents and Legal Status ALERTS");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        runAlertsButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        runAlertsButton.setText("RUN ALERTS");
        runAlertsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runAlertsButtonActionPerformed(evt);
            }
        });

        folderButton.setText("Results Folder...");
        folderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderButtonActionPerformed(evt);
            }
        });

        loadPnsButton.setText("Load PNs...");
        loadPnsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadPnsButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Highlights After Date:");

        jLabel2.setText("Legal Stuatus Authorities:");

        jLabel3.setText("Results Folder Location:");

        folderField.setEditable(false);

        jLabel4.setText("Publication Numbers:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 46, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(runAlertsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(folderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loadPnsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 45, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pdField)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ccField)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(folderField))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addComponent(ccField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(folderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(loadPnsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(folderButton)
                        .addGap(18, 18, 18)
                        .addComponent(runAlertsButton))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runAlertsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runAlertsButtonActionPerformed
        //verify fields...
        String pd = pdField.getText(), cc = ccField.getText(),
                folder = folderField.getText();
        if (jTextArea1.getText().equals("") || cc.equals("") || 
                pd.equals("") || folder.equals("")) {
            JOptionPane.showMessageDialog(this, "Please fill all fields.");
            return;
        }
        
        PatentCollectionMap patentDocs = new PatentCollectionMap();
        String pnText = jTextArea1.getText();
        String[] patNumbers = pnText.split("\n");
        try {
            for (String patNumber : patNumbers) {
                PatentDocument patentDoc;
                patentDoc = new PatentDocument(patNumber);
                //a complex way to make sure both key and value have EPO format
                patentDoc.setNumber(PNFormat.getPN(patentDoc, PNFormat.EPO));
                patentDocs.put(patentDoc.getCountry() + patentDoc.getNumber(),
                        patentDoc);
            }
        } catch (Exception x) {
            System.out.println("runAlertsButtonActionPerformed: " + x.toString());
        }
        
        opsAlertsPlugin.runAlerts(patentDocs, pd, cc, folder);
    }//GEN-LAST:event_runAlertsButtonActionPerformed

    //select or make directory for results
    private void folderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folderButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (!folderField.getText().equals("")) {
            fc.setSelectedFile(new File(folderField.getText()));
        }
        int i = fc.showDialog(this, "Select Results Folder");
        if (i==JFileChooser.APPROVE_OPTION) {
            File resultsFolder = fc.getSelectedFile();
            folderField.setText(resultsFolder.getPath());
            if (!resultsFolder.exists()) {
                resultsFolder.mkdir();
            }
        }
    }//GEN-LAST:event_folderButtonActionPerformed

    //load patent numbers from txt file
    private void loadPnsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadPnsButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        int i = fc.showOpenDialog(this);
        if (i==JFileChooser.APPROVE_OPTION) {
            //java 7
//            try (BufferedReader br = new BufferedReader(
//                         new FileReader(fc.getSelectedFile()))) {
            try {
                BufferedReader br = new BufferedReader(
                         new FileReader(fc.getSelectedFile()));
                String line;
                int lineCount = 0;
                while ((line=br.readLine())!=null) {
                    if (lineCount++>0) {
                        jTextArea1.append(line.trim() + "\n");
                    }
                }
                br.close();
            } catch (Exception x) {x.printStackTrace();}
        }
    }//GEN-LAST:event_loadPnsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ccField;
    private javax.swing.JButton folderButton;
    private javax.swing.JTextField folderField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton loadPnsButton;
    private javax.swing.JTextField pdField;
    private javax.swing.JButton runAlertsButton;
    // End of variables declaration//GEN-END:variables
}
